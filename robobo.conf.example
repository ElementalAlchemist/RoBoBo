# RoBoBo Configuration File
# This is a file that can be used as a configuration for the RoBoBo IRC bot.
# etc.

server irc.example.com {
	# protocol: the protocol to use to connect to the server
	# Unless you're trying to connect RoBoBo as a server, you'll want "client"
	protocol = "client";
	# sockettype: the type of connection to use to connect to the server
	# Unless you're using SSL or something else, "plaintext" will make a normal connection
	sockettype = "plaintext";
	# port: the port that the IRC server uses for client connections
	# This is usually 6667
	port = "6667";
	# bind: the local IP address to bind to (optional)
	# you shouldn't need this unless you're on a server with multiple IPs
	#bind = "127.0.0.1";
	# nick: the nick for the bot to be used on that server
	nick = "RoBoBo";
	# altnick: the nick the bot should use if the primary nick is already in use
	altnick = nick + "_";
	# ident: the ident for the bot to be used on that server.  Ident servers can override this, as can a vIdent.
	ident = "RoBoBo";
	# gecos: the GECOS or realname for the bot to use on the server.
	gecos = "RoBoBo-IRC-BoBo IRC Bot";
	# password: if the server requires a password to connect, add it here
	# if it doesn't, leave it blank or commented
	# password = "";
	# channels: the channels the bot will join on connect.
	# These channels should be in an IRC-friendly format; that is, they will
	# be sent as they appear here immediately after the JOIN command in IRC.
	channels = "#robobo";
}

serverconf irc.server.net { # This server will not be connected on startup, but its configuration will be saved so that it can be connected to later
	protocol = "inspircd21"; # This example block is set up for InspIRCd connections.
	sockettype = "plaintext";
	servername = "robobo.server.net"; # Name this server!  Mostly because you have to.
	sid = "00A"; # The server ID is required for InspIRCd server connections.
	password = "password"; # A password for connecting is also required.
	description = "Server description!"; # Also provide a server description.
	port = "6667";
	0/nick = "RoBoBo"; # Adding clients is optional.  If not specified, no clients will be created on connect.
	0/ident = nick;
	0/host = "i.am.a.magical.bot";
	0/gecos = "RoBoBo-IRC-BoBo IRC Bot";
	# 0/oper = "RoBoBoper"; # An oper type is optional and only if you want other servers to know this client is supposed to be an oper
		# This may be required for some services usage or maybe some other situations.
	# 0/channels = "#robobo,#more-robobo"; # A comma-separated list of channels is also optional and makes the client in question autojoin the listed channels.
	# Other clients may be specified as long as you increase the number before the slash for each of the variables for each new client.
}

module cap {}

module services_identify {
	irc.server.net/service = "NickServ";
	#irc.server.net/service = "AuthServ@service.server.net"; # Nickname should be in this form if the server requires identification to be sent to a nick like this
	irc.server.net/command = "IDENTIFY";
	#irc.server.net/nickname = ""; # This is only necessary on services that require it or if you're identifying to an account of a different nick (and services support it)
	irc.server.net/password = "pass";
	# Repeat for each server on which the bot should identify.
}

moduleconf setx {
	servers = "irc.server1.net,irc.server2.net"; # comma-separated list of servers on which to set +x
}

module ctcpversionreply { # This module replies to CTCP VERSION requests sent to the bot.
	# replystring: Text added to the end of the VERSION reply sent from the bot. Optional.
	#replystring = "";
}

module ctcppingreply {} # This module replies to CTCP PING requests sent to the bot.  There are no configurable options.

module ctcptimereply {} # This module replies to CTCP TIME requests sent to the bot.  There are no configurable options.

module dccchat {} # This module allows the bot to accept DCC chat requests and open a DCC chat session.  There are no configurable options.

module admin {
	# Admins start with 0.  The module considers admin #0 as the bot master.
	0/server = "irc.chatspike.net"; # server name must be the same as the name of the server block (server name {...})
	0/nick = "ElementalAlchemist"; # your IRC nick
	0/password = "password"; # the admin password you will use for the bot
	0/verbose = "1"; # be verbose about what's happening with the bot with this admin?  DCC only.
}

module admin_modmanage {
	#masteronly = "yes"; # whether or not this command is to be available only to the bot master. Uncomment and change to change.
} # The admin module masteronly settings default to the settings shown.  "yes" and "no" are the accepted values.

module admin_rehash {
	#masteronly = "yes";
}

module admin_say {
	#masteronly = "no";
}

module admin_channels {
	#masteronly = "no";
}

module admin_connect {
	#masteronly = "yes";
}

module admin_die {
	#masteronly = "yes";
}

moduleconf admin_raw {
	#masteronly = "no";
} # This module is not loaded on start but can be loaded while the bot is running
# You should not load m_admin_raw unless you know the IRC protocol.  Also be aware that some changes to the channel state while using raw may desync the bot.