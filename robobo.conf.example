# RoBoBo Configuration File
# This is a file that can be used as a configuration for the RoBoBo IRC bot.
# etc.

server irc.example.com {
	# port: the port that the IRC server uses for client connections
	# This is usually 6667
	port = "6667";
	# nick: the nick for the bot to be used on that server
	nick = "RoBoBo";
	# altnick: the nick the bot should use if the primary nick is already in use
	altnick = nick + "_";
	# ident: the ident for the bot to be used on that server.  Ident servers can override this, as can a vIdent.
	ident = "RoBoBo";
	# gecos: the GECOS or realname for the bot to use on the server.
	gecos = "RoBoBo-IRC-BoBo IRC Bot";
	# password: if the server requires a password to connect, add it here
	# if it doesn't, leave it blank or commented
	# password = "";
	# channels: the channels the bot will join on connect.
	# These channels should be in an IRC-friendly format; that is, they will
	# be sent as they appear here immediately after the JOIN command in IRC.
	channels = "#robobo";
}

serverconf irc.server.net { # This server will not be connected on startup, but its configuration will be saved so that it can be connected to later
	port = "6667";
	nick = "RoBoBo";
	altnick = nick + "_";
	ident = nick;
	gecos = "RoBoBo-IRC-BoBo IRC Bot";
	# password = "";
	# channels = "";
}

module m_ctcpversionreply.so { # This module replies to CTCP VERSION requests sent to the bot.
	# replystring: Text added to the end of the VERSION reply sent from the bot. Optional.
	#replystring = "";
}

module m_ctcppingreply.so {} # This module replies to CTCP PING requests sent to the bot.  There are no configurable options.

module m_ctcptimereply.so {} # This module replies to CTCP TIME requests sent to the bot.  There are no configurable options.

module m_dccchat.so {} # This module allows the bot to accept DCC chat requests and open a DCC chat session.  There are no configurable options.

module m_admin.so {
	# Admins start with 0.  The module considers admin #0 as the bot master.
	0/server = "irc.freenode.net"; # server name must be the same as the name of the server block (server name {...})
	0/nick = "ElementAlchemist"; # your IRC nick
	0/password = "password"; # the admin password you will use for the bot
	0/verbose = "1"; # be verbose about what's happening with the bot with this admin?  DCC only.
}

module m_admin_loadmod.so {}

module m_admin_unloadmod.so {}

module m_admin_rehash.so {}

module m_admin_say.so {}

module m_admin_channels.so {}

module m_admin_connect.so {}

module m_admin_die.so {}

moduleconf m_admin_raw.so {} # This module is not loaded on start but can be loaded while the bot is running
# You should not load m_admin_raw unless you know the IRC protocol.