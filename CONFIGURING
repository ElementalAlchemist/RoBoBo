The configuration is set up in a block format.  Each block is set up as such:

block_type block_name {
	var1 = "value 1";
	var2 = "value 2";
	var3 = "42";
	var4 = var1;
	var5 = var4 + var3;
	var6 = "not " + var2;
}

There are only four block types.  These are as follows:
server - loads the configuration for the server and connects to it on startup
serverconf - loads the configuration for the server and saves it for later
	connection
module - loads the configuration for the module and loads it on startup
moduleconf - loads the configuration for the module and saves it for later
	loading

The end of the block type is signaled by any kind of whitespace.  After that,
you must specify the block name.
For server and serverconf, the block name is the address of the server, e.g.
	irc.example.net
For module and moduleconf, the block name is the filename without the prefix
	and the extension, e.g. example (which loads m_example.so)

The block name must be followed by an opening brace ({).
Inside the block, you can have any number of variables.  Variable names must be
separated from values by equal signs.  Values must be in quotes; RoBoBo will
assume anything not in quotes is a variable name from earlier in the block (and
if it's not, it'll be replaced with nothing).  You can append strings using the
plus (+) sign.  The strings can be literal strings that you put in the config
file (in quotes) or variable names from earlier in that block (not in quotes).
The plus sign does not add numbers if there are numbers in the string; it
simply concatenates the strings.
In the example above, the following definitions are the same as the definitions
in the block:
var4 = "value 1";
var5 = "value 142";
var6 = "not value 2";
You can concatenate as many strings as you wish for one variable.

In server blocks, there are two required variables.  These variables are used
by the bot core to determine how to connect to the server.
protocol: This variable must contain the name of a protocol module file
without the p_ prefix or .so extension and is used to load the correct protocol
module for that server connection.  If you're not sure what to use, "client"
will load p_client, the default IRC client connection.
socket: This variable must contain the name of a socket module file without the
s_ prefix or .so extension and is used to load the correct socket module for
that server connection.  If you're not sure what to use, "plaintext" will load
s_plaintext, the normal (no SSL, etc.) plain-text connection.

When using p_client, you can specify for each server which mode letters mean
what by specifing the mode's longname (a list of these is in section 5 of
PROTOCOL) as the variable name and the letter used by the server as the value.
To prevent mode letter conflicts, make sure to use "disable" as the value on
any modes that aren't used on the server and have a default letter of a
different mode that does exist.  It is strongly advised that you disable
longmode on servers where the long-name modes list mode is not supported
(currently almost all of them). (longmode = "disable";)

You must end each block with a closing brace (}).

If you wish, you may separate your config into different files and include each
one in robobo.conf.  The syntax for including is this:
include filename.conf;
Alternatively, you can keep configuration files elsewhere:
include /absolute/path/to/filename.conf;
include relative/path/to/filename.conf;

Relative paths are relative to the robobo executable.

If you wish to use multiple confs and load different ones at runtime, you can
do so using the --confdir and --confname options (you don't need to use both if
it's not necessary).
--confdir <directory> allows you to specify a directory to look in for the
config file.  If not specified, RoBoBo looks in the main robobo dir.
--confname <directory> allows you to specify a different filename for the
config file.  If not specified, RoBoBo looks for robobo.conf.